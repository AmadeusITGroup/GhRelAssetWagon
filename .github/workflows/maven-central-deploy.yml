name: Deploy to Maven Central

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Perform a dry run (validate only, do not publish)'
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: central
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Import GPG key
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo "$GPG_PRIVATE_KEY" | gpg --dearmor --batch --yes --import
        gpg --list-secret-keys --keyid-format LONG
        # Configure GPG for non-interactive use
        echo "use-agent" >> ~/.gnupg/gpg.conf
        echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
        echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
        gpg-connect-agent reloadagent /bye
        
    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
    - name: Run tests
      run: mvn clean test
      
    - name: Verify build
      run: mvn clean verify -DskipTests
      
    - name: Deploy to Maven Central (Dry Run)
      if: ${{ github.event.inputs.dry_run == 'true' }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo "üîç Performing dry run - validating artifacts without publishing"
        mvn clean deploy -DskipTests -Dcentral.autoPublish=false -Dgpg.skip=false
        echo "‚úÖ Dry run completed successfully - artifacts validated and signed"
        
    - name: Deploy to Maven Central
      if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo "üöÄ Deploying to Maven Central..."
        mvn clean deploy -DskipTests -Dgpg.skip=false
        echo "‚úÖ Deployment completed successfully"
        
    - name: Manual Deploy (Workflow Dispatch)
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'false' }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo "üöÄ Manual deployment to Maven Central..."
        mvn clean deploy -DskipTests -Dgpg.skip=false
        echo "‚úÖ Manual deployment completed successfully"
        
    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: maven-artifacts
        path: |
          target/*.jar
          target/*.pom
          target/*.asc
        retention-days: 30
